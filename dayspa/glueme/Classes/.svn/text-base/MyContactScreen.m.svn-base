//
//  MyContactScreen.m
//  glueme
//
//  Created by APPLE  on 9/21/11.
//  Copyright 2011 openxcel. All rights reserved.
//

#import "MyContactScreen.h"
#import "phoneBookDetail.h"
#import "FAQHelp.h"
#import "whogluedmap.h"
@implementation MyContactScreen
@synthesize searchbar,SearchTbl,contactArray,searchNameArray,PhoneBookArray,contactSegment,GlueContactTbl,PhonebookTbl,phonebookcell;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}
-(IBAction)onMap:(id)sender{
	
	
	whogluedmap	*gluemap=[[whogluedmap alloc]initWithNibName:@"whogluedmap" bundle:nil];
	[self.navigationController pushViewController:gluemap animated:YES];
	[gluemap release];
	
	
}
-(IBAction)segmentedControlIndexChanged
{
    switch(contactSegment.selectedSegmentIndex) 
    {
        case 0:
           
            SearchTbl.hidden = NO;
            GlueContactTbl.hidden = YES;
            PhonebookTbl.hidden = YES;
                      
            
            //[SEGCntrlContacts setImage:[UIImage imageNamed:@"contactsB.png"] forSegmentAtIndex:0];
            //            [SEGCntrlContacts setImage:[UIImage imageNamed:@"inviteW.png"] forSegmentAtIndex:1];
            //            [SEGCntrlContacts setImage:[UIImage imageNamed:@"StatusW.png"]forSegmentAtIndex:2];
            
            
            break;
        case 1:
            
            
            SearchTbl.hidden = YES;
            GlueContactTbl.hidden = NO;
            PhonebookTbl.hidden = YES;
            //[SEGCntrlContacts setImage:[UIImage imageNamed:@"contactsW.png"] forSegmentAtIndex:0];
            //            [SEGCntrlContacts setImage:[UIImage imageNamed:@"inviteB.png"] forSegmentAtIndex:1];
            //            [SEGCntrlContacts setImage:[UIImage imageNamed:@"StatusW.png"]forSegmentAtIndex:2];
            break;
        case 2:
            
            SearchTbl.hidden = YES;
            GlueContactTbl.hidden = YES;
            PhonebookTbl.hidden = NO;
            break;
    }
}

- (void)dealloc
{
   // [PhoneBookArray release];
    [searchNameArray release];
    [PhonebookTbl release];
    [GlueContactTbl release];
    [contactSegment release];
    [super dealloc];
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if (tableView == SearchTbl) {
        return [dataSource count];
    }
    if (tableView == GlueContactTbl) {
        return [contactArray count];
    }
    if (tableView == PhonebookTbl) {
        return [PhoneBookArray count];
    }
    
}

-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

-(UITableViewCell*)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    static NSString *CellIdentifier = @"Cell";
    
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    
    
    if (tableView == SearchTbl) {
        
        if (cell == nil) {
            cell = [[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier] autorelease];
        }
            
        cell.textLabel.text = [dataSource objectAtIndex:indexPath.row];
        cell.textLabel.textColor = [UIColor whiteColor];
        [cell setAccessoryType:UITableViewCellAccessoryDisclosureIndicator];
    }
    else if(tableView == GlueContactTbl)
    {
         if (cell == nil) {
            [[NSBundle mainBundle] loadNibNamed:@"phonebookCell" owner:self options:nil];
            cell = phonebookcell;
            phonebookcell = nil;
        }
        // cell.textLabel.text = [PhoneBookArray objectAtIndex:indexPath.row];
        [cell setSelectionStyle:UITableViewCellSelectionStyleNone];
        UIButton *dltBtn;
        UIButton *lblBtn;
        UILabel *nameLbl;
        
        lblBtn = (UIButton *)[cell.contentView viewWithTag:1];
        dltBtn = (UIButton *)[cell.contentView viewWithTag:2];
        nameLbl = (UILabel *)[cell.contentView viewWithTag:3];
        
        nameLbl.text = [contactArray objectAtIndex:indexPath.row];
        
        [lblBtn addTarget:self action:@selector(lblBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
        [lblBtn setTag:indexPath.row];
        [dltBtn addTarget:self action:@selector(dltBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
        [dltBtn setTag:indexPath.row];
    }
    else if(tableView == PhonebookTbl)
    {
        if (cell == nil) {
            cell = [[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier] autorelease];
        }
        cell.textLabel.text = [PhoneBookArray objectAtIndex:indexPath.row];
        cell.textLabel.textColor = [UIColor whiteColor];
        [cell setAccessoryType:UITableViewCellAccessoryDisclosureIndicator];
        
        
        
        

    }
    
     return cell;

}

-(void)lblBtnClicked:(id)sender
{
    UIButton *Btn= (UIButton*)sender;
    NSLog(@"%d",Btn.tag);
}

-(void)dltBtnClicked:(id)sender
{
    UIButton *Btn= (UIButton*)sender;
    
    [contactArray removeObjectAtIndex:Btn.tag];
    [GlueContactTbl reloadData];
    
    NSLog(@"%d",Btn.tag);
}

-(IBAction)onFAQ:(id)sender
{
	FAQHelp *faqhelp=[[FAQHelp alloc]initWithNibName:@"FAQHelp" bundle:nil];
	[self.navigationController pushViewController:faqhelp animated:YES];
	[faqhelp release];
}



-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (tableView == SearchTbl) {
        contactVwDetail = [[ContactDetailView alloc] initWithNibName:@"ContactDetailView" bundle:nil];
        
        [self.navigationController pushViewController:contactVwDetail animated:YES];
    }
    if (tableView == PhonebookTbl) {
        phonebookdetailObj = [[phoneBookDetail alloc] initWithNibName:@"phoneBookDetail" bundle:nil];
        
        [self.navigationController pushViewController:phonebookdetailObj animated:YES];
    }
    
}


- (void)searchBarTextDidBeginEditing:(UISearchBar *)searchBar

{
    
    // only show the status bar’s cancel button while in edit mode
    
    searchBar.showsCancelButton = YES;
    
    searchBar.autocorrectionType = UITextAutocorrectionTypeNo;
    
    // flush the previous search content
    
    [dataSource removeAllObjects];    
    
    
}

- (void)searchBarTextDidEndEditing:(UISearchBar *)searchBar

{
    
//    [searchBar setShowsCancelButton:YES animated:YES];
//	searchBar.showsCancelButton=YES;
    searchBar.showsCancelButton = NO;
//    
//    if (searchBar == searchbar) {
//        
//        
//        [dataSource removeAllObjects];
//        NSDictionary *dic;
//        //NSString *dic;
//        for(dic in searchNameArray)
//        {
//            NSString *st =    [dic copy];
//            
//            NSRange rang =[st rangeOfString:searchBar.text options:NSCaseInsensitiveSearch];
//            
//            
//            if (rang.length == [searchBar.text length]) {
//                [dataSource addObject:dic];
//            }else {
//                [dataSource removeObject:dic];
//            }
//        }
//        [SearchTbl reloadData];
//        
//        
//    }
    
}

- (void)searchBar:(UISearchBar *)searchBar textDidChange:(NSString *)searchText

{
   
    [dataSource removeAllObjects];// remove all data that belongs to previous search
    
    if([searchText isEqualToString:@""] || searchText==nil){
        
       [SearchTbl reloadData];
        
       return;
    }
    
    NSInteger counter = 0;
    
    for(NSString *name in searchNameArray)
        
    {
        
        NSAutoreleasePool *pool = [[NSAutoreleasePool alloc]init];
        
        NSRange r = [name rangeOfString:searchText];
        
       if(r.location != NSNotFound)
            
        {
           
           if(r.location== 0)//that is we are checking only the start of the names.
                
            {
                
                [dataSource addObject:name];
                
            }
            
        }
        
        counter++;
        
        [pool release];
        
    }
    
    [SearchTbl reloadData];
    
    
       
}

- (void)searchBarCancelButtonClicked:(UISearchBar *)searchBar

{
    
    // if a valid search was entered but the user wanted to cancel, bring back the main list content
    
    [dataSource removeAllObjects];
    
    [dataSource addObjectsFromArray:dataSource];
    
    @try{
        
        [SearchTbl reloadData];
        
    }
    
    @catch(NSException *e){
        
    }
    
    [searchBar resignFirstResponder];
    
    searchBar.text = @"";
    
    
//    [searchBar resignFirstResponder];
//	[searchBar setShowsCancelButton:NO animated:YES]; 

}
    
    // called when Search (in our case “Done”) button pressed
    
- (void)searchBarSearchButtonClicked:(UISearchBar *)searchBar
    
{

    [searchBar resignFirstResponder];
    
}


- (void)didReceiveMemoryWarning
{
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc that aren't in use.
}

#pragma mark - View lifecycle

- (void)viewDidLoad
{
    
    self.navigationController.navigationBar.alpha = 0.0;
    
    self.navigationController.navigationBar.tintColor = [UIColor clearColor];
    UIImageView *topbarImg = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 320, 46)];
    [topbarImg setImage:[UIImage imageNamed:@"topBar.png"]];
    
    [self.view addSubview:topbarImg];
    
    UIButton *backBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    backBtn.frame = CGRectMake(5,10, 76, 28);
    
    [backBtn addTarget:self action:@selector(Back) forControlEvents:UIControlEventTouchUpInside];
    
    
    
    [self.view addSubview:backBtn]; 
    
   
    
    contactSegment.selectedSegmentIndex = 0;
    SearchTbl.hidden = NO;
    GlueContactTbl.hidden = YES;
    PhonebookTbl.hidden = YES;
    
    searchNameArray = [[NSMutableArray alloc] init];
    dataSource = [[NSMutableArray alloc] init];
    [searchNameArray addObject:@"Steve Vai"];
    [searchNameArray addObject:@"Steve Morse"];
    [searchNameArray addObject:@"Steve Perry"];
    [searchNameArray addObject:@"Steve Nash"];
    [searchNameArray addObject:@"Steve Martin"];
    
    [dataSource addObjectsFromArray:searchNameArray];
    
    contactArray = [[NSMutableArray alloc] init];
    [contactArray addObject:@"Ace Vantura"];
    [contactArray addObject:@"Eddie Vedder"];
    [contactArray addObject:@"Mark Webber"];
    [contactArray addObject:@"Ozzy Osbourne"];
    [contactArray addObject:@"Sabastian Vettel"];
    
    PhoneBookArray = [[NSMutableArray alloc] init];
    [PhoneBookArray addObject:@"Ashton Kutcher"];
    [PhoneBookArray addObject:@"David Bowie"];
    [PhoneBookArray addObject:@"Eminem"];
    [PhoneBookArray addObject:@"Jim Morrison"];
    [PhoneBookArray addObject:@"Tony Stark"];
    
    
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
}

-(void)viewWillAppear:(BOOL)animated
{
    
}

-(void)Back
{
    [self.navigationController popViewControllerAnimated:YES];
}


- (void)viewDidUnload
{
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    // Return YES for supported orientations
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}

@end
