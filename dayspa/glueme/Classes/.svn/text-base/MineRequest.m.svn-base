//
//  MineRequest.m
//  glueme
//
//  Created by APPLE  on 9/20/11.
//  Copyright 2011 openxcel. All rights reserved.
//

#import "MineRequest.h"
#import "MyRequestCell.h"
#import "whogluedmap.h"
#import "FAQHelp.h"

@implementation MineRequest
@synthesize RequestTbl,requestSegment,statusArray,nameArray,TheirNameArray,TheirStatusArray,ind;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if (requestSegment.selectedSegmentIndex == 0) {
        [nameArray count];
    }
    else
    {
        [TheirNameArray count];
    }
}
-(IBAction)onMap:(id)sender{
	
	
	whogluedmap		*gluemap=[[whogluedmap alloc]initWithNibName:@"whogluedmap" bundle:nil];
	[self.navigationController pushViewController:gluemap animated:YES];
	[gluemap release];
	
	
}

-(IBAction)onFAQ:(id)sender
{
	FAQHelp *faqhelp=[[FAQHelp alloc]initWithNibName:@"FAQHelp" bundle:nil];
	[self.navigationController pushViewController:faqhelp animated:YES];
	[faqhelp release];
}

-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
//    static NSString *CellIdentifier = @"Cell";
//    
//    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
//    if (cell == nil) {
//        cell = [[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier] autorelease];
//    }
    
    static NSString *CellIdentifier = @"MyRequestCell";
    
    MyRequestCell *cell = (MyRequestCell *)[tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    if (cell == nil) {			
        NSArray *nib = nil;		
        nib = [[NSBundle mainBundle] loadNibNamed:@"MyRequestCell" owner:nil options:nil];
        cell = [nib objectAtIndex:0];	
        [cell setParentObj:self];
        
        //[cell setParentObject:self];
    }	
    
    if (requestSegment.selectedSegmentIndex == 0) {
        
          cell.statusLbl.text = [statusArray objectAtIndex:indexPath.row];
        cell.NameLbl.text = [nameArray objectAtIndex:indexPath.row];
        
        cell.selectionStyle = UITableViewCellEditingStyleNone;
        ind = indexPath.row;
        
        if ([cell.statusLbl.text isEqualToString:@"Blocked"]) {
            UIButton *dltBtn = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            [dltBtn setTitle:@"Ignore" forState:UIControlStateNormal];
            dltBtn.frame = CGRectMake(262, 0, 18, 18);
            [dltBtn setImage:[UIImage imageNamed:@"closeBtn.png"] forState:UIControlStateNormal];
            [dltBtn addTarget:self action:@selector(deleteCell) forControlEvents:UIControlEventTouchUpInside];
            [cell.contentView addSubview:dltBtn];
        }
        return cell;
    }
    else
    {
        cell.statusLbl.text = [TheirStatusArray objectAtIndex:indexPath.row];
        cell.NameLbl.text = [TheirNameArray objectAtIndex:indexPath.row];
        if ([cell.statusLbl.text isEqualToString:@"GlueMe for 2 hours"]) {
           
            UIButton *IgnoreBtn = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            [IgnoreBtn setTitle:@"Ignore" forState:UIControlStateNormal];
            IgnoreBtn.frame = CGRectMake(204, 54, 72, 25);
            
            [IgnoreBtn addTarget:self action:@selector(ClickOnReject) forControlEvents:UIControlEventTouchUpInside];
           
            UIButton *AcceptBtn = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            [AcceptBtn setTitle:@"Accept" forState:UIControlStateNormal];
            AcceptBtn.frame = CGRectMake(133, 55, 67, 24);
            
            [AcceptBtn addTarget:self action:@selector(ClickOnAccept) forControlEvents:UIControlEventTouchUpInside];
            
            [cell.contentView addSubview:IgnoreBtn];
            [cell.contentView addSubview:AcceptBtn];
        }
        else
        {
            UIButton *BlockBtn = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            [BlockBtn setTitle:@"Block" forState:UIControlStateNormal];
            BlockBtn.frame = CGRectMake(204, 54, 72, 25);
            
            [BlockBtn addTarget:self action:@selector(ClickOnBlock) forControlEvents:UIControlEventTouchUpInside];

            UIButton *IgnoreBtn = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            [IgnoreBtn setTitle:@"Ignore" forState:UIControlStateNormal];
            IgnoreBtn.frame = CGRectMake(133, 55, 67, 24);
            
            [IgnoreBtn addTarget:self action:@selector(ClickOnReject) forControlEvents:UIControlEventTouchUpInside];
            
            UIButton *AcceptBtn = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            [AcceptBtn setTitle:@"Accept" forState:UIControlStateNormal];
            AcceptBtn.frame = CGRectMake(60, 55, 67, 24);
            
            [AcceptBtn addTarget:self action:@selector(ClickOnAccept) forControlEvents:UIControlEventTouchUpInside];

            [cell.contentView addSubview:IgnoreBtn];
            [cell.contentView addSubview:AcceptBtn];
            [cell.contentView addSubview:BlockBtn];
        }
        cell.selectionStyle = UITableViewCellEditingStyleNone;
        return cell;

    }
}

-(void)deleteCell
{
    [nameArray removeObjectAtIndex:ind];
    [RequestTbl reloadData];
}

-(void)ClickOnBlock
{
    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Info" message:@"This gluer will be blocked forever and will not be able to send you a GlueMe request in future. Continue?" delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:@"Cancel", nil];
    [alert show];
    [alert release];
}

-(void)ClickOnAccept
{
    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Info" message:@"Friend Accepted" delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
    [alert show];
    [alert release];
}

-(void)ClickOnReject
{
    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Info" message:@"Friend Ignored" delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
    [alert show];
    [alert release];
    
    //    acceptrequestObj = [[AcceptRequest alloc] initWithNibName:@"AcceptRequest" bundle:nil];
    //    [parentObj.navigationController pushViewController:acceptrequestObj animated:YES];
    
}



-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 100;
}

- (IBAction) EditTable:(id)sender{
	if(self.editing){
		[super setEditing:NO animated:NO]; 
		[RequestTbl setEditing:NO animated:NO];
        //        if (didDelete) {
        //            GoalDetails = [obj getCurrentGoalDetail : [catList objectAtIndex:catId]];
        //            arryData = GoalDetails;
        //            //cnt = [arryData count];
        //        }
        //
        //        if (didDelete) {
        //            arryData = tempData;
        //        }
		[RequestTbl reloadData];
        
        [self.navigationItem.rightBarButtonItem setTitle:@"Edit"];
		[self.navigationItem.rightBarButtonItem setStyle:UIBarButtonItemStylePlain];
	}
	else{
		[super setEditing:YES animated:YES]; 
		[RequestTbl setEditing:YES animated:YES];
		[RequestTbl reloadData];
		[self.navigationItem.rightBarButtonItem setTitle:@"Done"];
		[self.navigationItem.rightBarButtonItem setStyle:UIBarButtonItemStyleDone];
	}
    
}

- (UITableViewCellEditingStyle)tableView:(UITableView *)aTableView editingStyleForRowAtIndexPath:(NSIndexPath *)indexPath {
   
    // No editing style if not editing or the index path is nil.
    //if (self.editing == NO || !indexPath) return UITableViewCellEditingStyleNone;
    //    // Determine the editing style based on whether the cell is a placeholder for adding content or already 
    //    // existing content. Existing content can be deleted.    
    //    if (self.editing && indexPath.row == ([arryData count])) {
    //		return UITableViewCellEditingStyleInsert;
    //	} else {
    //		return UITableViewCellEditingStyleDelete;
    //	}
    //    return UITableViewCellEditingStyleNone;
    /*if (didDelete) {
     arryData = tempData;
     }*/
    
	return UITableViewCellEditingStyleDelete;
    
}

// Update the data model according to edit actions delete or insert.
- (void)tableView:(UITableView *)aTableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle 
forRowAtIndexPath:(NSIndexPath *)indexPath {
	
    
    if (editingStyle == UITableViewCellEditingStyleDelete) {
              
        if (requestSegment.selectedSegmentIndex == 0) {
            [nameArray removeObjectAtIndex:indexPath.row];
        }
       else
       {
           [TheirNameArray removeObjectAtIndex:indexPath.row];
       }
       
        [RequestTbl reloadData];
       
        
    } else if (editingStyle == UITableViewCellEditingStyleInsert) {
		[RequestTbl reloadData];
    }

}


- (void)dealloc
{
    [TheirStatusArray release];
    [TheirNameArray release];
    [nameArray release];
    [statusArray release];
    [requestSegment release];
    [super dealloc];
}

- (void)didReceiveMemoryWarning
{
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc that aren't in use.
}

#pragma mark - View lifecycle

- (void)viewDidLoad
{
    self.navigationController.navigationBar.alpha = 0.0;
    
    self.navigationController.navigationBar.tintColor = [UIColor clearColor];
    UIImageView *topbarImg = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 320, 46)];
    [topbarImg setImage:[UIImage imageNamed:@"topBar.png"]];
    
    [self.view addSubview:topbarImg];
    
    UIButton *backBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    backBtn.frame = CGRectMake(5,10, 76, 28);
    
    [backBtn addTarget:self action:@selector(Back) forControlEvents:UIControlEventTouchUpInside];
    
    
    
    [self.view addSubview:backBtn]; 

	
    statusArray = [[NSMutableArray alloc] init];
    nameArray = [[NSMutableArray alloc] init];
    TheirNameArray = [[NSMutableArray alloc] init];
    TheirStatusArray = [[NSMutableArray alloc] init];
    [TheirStatusArray addObject:@"Friend Request"];
    [TheirStatusArray addObject:@"GlueMe for 2 hours"];
    [TheirNameArray addObject:@"Steven tyler"];
    [TheirNameArray addObject:@"Charlie sheen"];
    [statusArray addObject:@"Pending"];
    [statusArray addObject:@"Blocked"];
    [nameArray addObject:@"John carter"];
    [nameArray addObject:@"Kurt cobain"];
    
   //   self.navigationController.navigationItem.backBarButtonItem.title = @"Back";
   
   
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
}

-(void)Back
{
    [self.navigationController popViewControllerAnimated:YES];
}


-(IBAction)SegmentChanged
{
    [RequestTbl reloadData];
    
//    NSIndexPath *ind = [NSIndexPath indexPathForRow:i inSection:0]; 
//    MyRequestCell *cell = (MyRequestCell *)[RequestTbl cellForRowAtIndexPath:ind];
//    
        if (requestSegment.selectedSegmentIndex == 1) {
            self.navigationItem.rightBarButtonItem=nil;
            
            
        }
        else{
            UIBarButtonItem *addButton = [[UIBarButtonItem alloc] initWithTitle:@"Edit" style:UIBarButtonItemStyleBordered target:self action:@selector(EditTable:)];
            [self.navigationItem setRightBarButtonItem:addButton];

        }
        
           
}

-(void)viewWillAppear:(BOOL)animated
{
    
}

- (void)viewDidUnload
{
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    // Return YES for supported orientations
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}

@end
