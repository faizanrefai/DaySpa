//
//  userregister.m
//  glueme
//
//  Created by apple on 9/19/11.
//  Copyright 2011 fgbfg. All rights reserved.
//

#import "userregister.h"
#import "AlertHandler.h"
#import "GdataParser.h"
#import "FAQHelp.h"

static const CGFloat MINIMUM_SCROLL_FRACTION = 0.2;
static const CGFloat MAXIMUM_SCROLL_FRACTION = 0.8;
static const CGFloat KEYBOARD_ANIMATION_DURATION = 0.3;

@implementation userregister
@synthesize registrationTbl,sectionArray,contentArray1,contentArray2,contentArray3,textArray,istextfill;
// The designated initializer.  Override if you create the controller programmatically and want to perform customization that is not appropriate for viewDidLoad.
/*
- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil {
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization.
    }
    return self;
}
*/


// Implement viewDidLoad to do additional setup after loading the view, typically from a nib.
- (void)viewDidLoad {
    [super viewDidLoad];
    
    
    
    self.navigationController.navigationBar.alpha = 0.0;
    
    self.navigationController.navigationBar.tintColor = [UIColor clearColor];
    UIImageView *topbarImg = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 320, 46)];
    [topbarImg setImage:[UIImage imageNamed:@"topbarlogin.png"]];
    
    [self.view addSubview:topbarImg];
    [self.navigationController.navigationBar sendSubviewToBack:topbarImg];

    textArray = [[NSMutableDictionary alloc] init];
//WithObjects:fnametext,lnametext,emailtext,passwordtext,confirmpasstext,phntext,nil];
    
	scroll.frame = CGRectMake(0, 44, 320, 460);
	scroll.contentSize = CGSizeMake(320, 520);
}

-(void)viewWillAppear:(BOOL)animated
{
    
}

-(IBAction)onFAQ:(id)sender
{
	FAQHelp *faqhelp=[[FAQHelp alloc]initWithNibName:@"FAQHelp" bundle:nil];
	[self.navigationController pushViewController:faqhelp animated:YES];
	[faqhelp release];
}

-(void)PassData
{
    [AlertHandler showAlertForProcess];
    
//    NSLog(@"%@",[NSString stringWithFormat:@"%d",objAppdel.userId]);
//    NSLog(@"%@",[NSString stringWithFormat:@"%d",objAppdel.chatWithUserId]);
//    NSLog(@"%@",ChatTxt.text);
//    
//    NSString *encodedString = [ChatTxt.text stringByAddingPercentEscapesUsingEncoding:NSASCIIStringEncoding];
//    NSLog(@"%@",encodedString);
//    
    
    fnametext = [textArray objectForKey:@"00"];
    lnametext = [textArray objectForKey:@"01"];
    emailtext = [textArray objectForKey:@"10"];
    passwordtext = [textArray objectForKey:@"11"];
    confirmpasstext = [textArray objectForKey:@"12"];
    phntext = [textArray objectForKey:@"20"];
    
    
	NSString *RegURL = [NSString stringWithFormat:@"http://www.openxcellaus.info/glueme/registration.php?firstname=%@&lastname=%@&email=%@&password=%@&cpassword=%@&phone=%@",fnametext,lnametext,emailtext,passwordtext,confirmpasstext,phntext];
    //NSString *RegURL = [NSString stringWithFormat:@"http://openxcellaus.info/leopard/chatting.php?from_user_id=7&to_user_id=8&text=heyfrndssssssss"];
    
	//    NSString *RegURL = @"http://www.openxcellaus.info/leopard/near_by_users.php?lat=23.41670000&long=72.91670000";
    
    
	GdataParser *parser = [[GdataParser alloc] init];
	[parser downloadAndParse:[NSURL URLWithString:RegURL] 
				 withRootTag:@"Record"
					withTags:[NSDictionary dictionaryWithObjectsAndKeys:@"msg",@"msg",nil] 
						 sel:@selector(finishGetData:) 
				  andHandler:self];
	
}

-(void)finishGetData:(NSDictionary*)dictionary{
	[AlertHandler hideAlert];
    
    NSLog(@"%@",dictionary);
    NSMutableArray *tempArray;
    tempArray = [dictionary objectForKey:@"array"];
    NSLog(@"%@",tempArray);
    NSMutableDictionary *tempDic = [tempArray objectAtIndex:0];
    NSLog(@"%@",[tempDic objectForKey:@"msg"]);
    NSString *temp = [tempDic objectForKey:@"msg"];
    if ([temp isEqualToString:@"Email Id is already Exists"]) {
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Info" message:@"Email Id is already Exists" delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
        [alert show];
        [alert release];
    }
    else if ([temp isEqualToString:@"Password and Confirm password must be same"]) {
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Info" message:@"Password and Confirm password must be same" delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
        [alert show];
        [alert release];
    }
    else
    {
        [self dismissModalViewControllerAnimated:YES];
    }
    
}
/*
// Override to allow orientations other than the default portrait orientation.
- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation {
    // Return YES for supported orientations.
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}
*/

-(IBAction)cancelbtn_clicked
{
	[self dismissModalViewControllerAnimated:YES];
	
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if(section == 0) {
		contentArray1 = [[NSArray arrayWithObjects:@"First Name", @"Last Name", nil] retain];
        return [contentArray1 count];
	}
	if(section == 1) {
		contentArray2 = [[NSArray arrayWithObjects:@"Email Address", @"Password",@"Confirm Password", nil] retain];
        return [contentArray2 count];
	}
    
    if(section == 2) {
		contentArray3 = [[NSArray arrayWithObjects:@"Cell Phone", nil] retain];
        return [contentArray3 count];
	}
	
	//contentArray = [[NSArray arrayWithObjects:@"First Name", @"Last Name", @"Email Address", @"Password",@"Confirm Password", @"Cell Phone", nil] retain];
	//return [contentArray count];
}


-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    sectionArray =  [[NSArray arrayWithObjects:@"Name", @"Email",@"Contact", nil] retain];
	
	return [sectionArray count];

}

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    static NSString *CellIdentifier = @"Cell";
    
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    if (cell == nil) {
        cell = [[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:CellIdentifier] autorelease];
        
        Txt = [[UITextField alloc] initWithFrame:CGRectMake(3, 3, 320, 38)];
        Txt.delegate = self;
        NSString * tagg = [NSString stringWithFormat:@"%d%d",indexPath.section,indexPath.row];
        Txt.tag = [tagg intValue];
        if (indexPath.section == 0) {
            Txt.placeholder = [contentArray1 objectAtIndex:indexPath.row];
        }
        else if (indexPath.section == 1) {
            Txt.placeholder = [contentArray2 objectAtIndex:indexPath.row];
        }
        else
        {
            Txt.placeholder = [contentArray3 objectAtIndex:indexPath.row];
        }
        
       // Txt.placeholder = [contentArray objectAtIndex:indexPath.row];
        
        
//        CGRect frame = CGRectMake(0, 0, 160, 29);
//        
//        UITextField *search= [[UITextField alloc] initWithFrame:frame];
//        search.borderStyle = UITextBorderStyleRoundedRect;
//        search.textColor = [UIColor blackColor];
//        search.font = [UIFont systemFontOfSize:17.0];
//        search.placeholder = @"Suchen";
//        search.backgroundColor = [UIColor clearColor];
//        search.autocorrectionType = UITextAutocorrectionTypeNo;
//        search.keyboardType = UIKeyboardTypeDefault;
//        search.returnKeyType = UIReturnKeySearch;
//        search.clearButtonMode = UITextFieldViewModeWhileEditing;
//        search.delegate = self;
        
        [cell.contentView addSubview:Txt];
    }
    
    return cell;
    //[cell setParentObject:self];
}

//- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
//    
//    NSString *sectionTitle = [self tableView:tableView titleForHeaderInSection:section];
//    
//}

- (NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section {
	
	NSString *sectionHeader = nil;
	
	if(section == 0) {
		sectionHeader = @"Name";
	}
	if(section == 1) {
		sectionHeader = @"Email";
	}
    if (section == 2) {
        sectionHeader = @"Contact";
    }
	
    return sectionHeader;
}
 

-(IBAction)registerbtn_clicked
{
  //  istextfill = TRUE;
	[self PassData];
}

-(BOOL)textFieldShouldReturn:(UITextField *)textField{
    
	[textField resignFirstResponder];
	return YES;
}

-(void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event
{
    [Txt resignFirstResponder];
//	[fnametext resignFirstResponder];
//	[lnametext resignFirstResponder];
//	[emailtext resignFirstResponder];
//	[passwordtext resignFirstResponder];
//	[confirmpasstext resignFirstResponder];
//	[phntext resignFirstResponder];
}

- (void)textFieldDidBeginEditing:(UITextField*)textField
{
    CGRect textFieldRect =[self.view.window convertRect:textField.bounds fromView:textField];
    CGRect viewRect =[self.view.window convertRect:self.view.bounds fromView:self.view];
    
    CGFloat midline = textFieldRect.origin.y + 1.0 * textFieldRect.size.height;
    CGFloat numerator =midline - viewRect.origin.y- MINIMUM_SCROLL_FRACTION * viewRect.size.height;
    CGFloat denominator =(MAXIMUM_SCROLL_FRACTION - MINIMUM_SCROLL_FRACTION)* viewRect.size.height;
    CGFloat heightFraction = numerator / denominator;
    
    animatedDistance = floor(162.0 * heightFraction);
    
    CGRect viewFrame = self.view.frame;
    
    viewFrame.origin.y -= animatedDistance;
    
    [UIView beginAnimations:nil context:NULL];
    [UIView setAnimationBeginsFromCurrentState:YES];
    [UIView setAnimationDuration:KEYBOARD_ANIMATION_DURATION];
    
    [self.view setFrame:viewFrame];
    
    [UIView commitAnimations];
}

- (void)textFieldDidEndEditing:(UITextField *)textField

{
    
    [textArray setObject:textField.text forKey:[NSString stringWithFormat:@"%i",textField.tag]];
    CGRect viewFrame = self.view.frame;
    viewFrame.origin.y += animatedDistance;
    [UIView beginAnimations:nil context:NULL];
    [UIView setAnimationBeginsFromCurrentState:YES];
    [UIView setAnimationDuration:KEYBOARD_ANIMATION_DURATION];
    [self.view setFrame:viewFrame];
    [UIView commitAnimations];
}

- (void)didReceiveMemoryWarning {
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc. that aren't in use.
}

- (void)viewDidUnload {
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}


- (void)dealloc {
    [textArray release];
    [sectionArray release];
    [registrationTbl release];
    [super dealloc];
}


@end
